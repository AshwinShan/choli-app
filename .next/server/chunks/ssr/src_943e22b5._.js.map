{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashwin/Documents/GitHub/choli-app/src/components/jobs/filters/dropdown.tsx"],"sourcesContent":["\"use client\";\r\nimport { Options } from \"@/types/filter\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\nexport default function MultiFilterDropDown({\r\n  options,\r\n  filterData,\r\n  categoryName,\r\n  onFilterChange,\r\n}: {\r\n  categoryName: string;\r\n  options: Options;\r\n  filterData: string[];\r\n  onFilterChange: (selectedValues: string[]) => void;\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const toggleDropdown = () => setIsOpen((prev) => !prev);\r\n\r\n  const handleCheckboxChange = (value: string) => {\r\n    setSelectedValues((prevSelected) => {\r\n      const updatedSelection = prevSelected.includes(value)\r\n        ? prevSelected.filter((v) => v !== value)\r\n        : [...prevSelected, value]; \r\n\r\n      setTimeout(() => onFilterChange(updatedSelection), 0);\r\n      return updatedSelection;\r\n    });\r\n  };\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const displayText =\r\n    selectedValues.length > 0 ? selectedValues.join(\", \") : categoryName;\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto relative\" ref={dropdownRef}>\r\n      {/* Toggle Button with selected values */}\r\n      <button\r\n        onClick={toggleDropdown}\r\n        className=\"w-[250px] flex items-center justify-between bg-gray-100 px-4 py-2 rounded-md shadow-sm text-left text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none\"\r\n        aria-expanded={isOpen}\r\n      >\r\n        <span className=\"truncate max-w-[200px]\">{displayText}</span>\r\n        {isOpen ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n      </button>\r\n\r\n      {/* Dropdown Menu */}\r\n      {isOpen && (\r\n        <div className=\"mt-2 p-4 bg-white border rounded-md shadow-md max-h-64 overflow-y-auto space-y-2 absolute z-10 w-full\">\r\n          {filterData.map((item, index) => (\r\n            <label\r\n              key={`${item}-${index}`}\r\n              className=\"flex items-center gap-2 cursor-pointer text-sm\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                value={item}\r\n                checked={selectedValues.includes(item)}\r\n                onChange={() => handleCheckboxChange(item)}\r\n                className=\"form-checkbox h-4 w-4 text-blue-600 \"\r\n              />\r\n              <span className=\"truncate\">{item}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAHA;;;;AAKe,SAAS,oBAAoB,EAC1C,OAAO,EACP,UAAU,EACV,YAAY,EACZ,cAAc,EAMf;IACC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjE,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE3C,MAAM,iBAAiB,IAAM,UAAU,CAAC,OAAS,CAAC;IAElD,MAAM,uBAAuB,CAAC;QAC5B,kBAAkB,CAAC;YACjB,MAAM,mBAAmB,aAAa,QAAQ,CAAC,SAC3C,aAAa,MAAM,CAAC,CAAC,IAAM,MAAM,SACjC;mBAAI;gBAAc;aAAM;YAE5B,WAAW,IAAM,eAAe,mBAAmB;YACnD,OAAO;QACT;IACF;IAEA,uCAAuC;IACvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,mBAAmB,KAAiB;YAC3C,IACE,YAAY,OAAO,IACnB,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAC1C;gBACA,UAAU;YACZ;QACF;QAEA,SAAS,gBAAgB,CAAC,aAAa;QACvC,OAAO;YACL,SAAS,mBAAmB,CAAC,aAAa;QAC5C;IACF,GAAG,EAAE;IAEL,MAAM,cACJ,eAAe,MAAM,GAAG,IAAI,eAAe,IAAI,CAAC,QAAQ;IAE1D,qBACE,8OAAC;QAAI,WAAU;QAAmC,KAAK;;0BAErD,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,iBAAe;;kCAEf,8OAAC;wBAAK,WAAU;kCAA0B;;;;;;oBACzC,uBAAS,8OAAC,gNAAA,CAAA,YAAS;wBAAC,MAAM;;;;;6CAAS,8OAAC,oNAAA,CAAA,cAAW;wBAAC,MAAM;;;;;;;;;;;;YAIxD,wBACC,8OAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC,MAAM,sBACrB,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,SAAS,eAAe,QAAQ,CAAC;gCACjC,UAAU,IAAM,qBAAqB;gCACrC,WAAU;;;;;;0CAEZ,8OAAC;gCAAK,WAAU;0CAAY;;;;;;;uBAVvB,GAAG,KAAK,CAAC,EAAE,OAAO;;;;;;;;;;;;;;;;AAiBrC","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashwin/Documents/GitHub/choli-app/src/components/jobs/filters/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { Filter, Options } from \"@/types/filter\";\r\nimport MultiFilterDropDown from \"./dropdown\";\r\n\r\nexport default function Filters({\r\n  filter,\r\n  setSelectedFilters,\r\n}: {\r\n  filter: Filter;\r\n  setSelectedFilters: React.Dispatch<\r\n    React.SetStateAction<{\r\n      company: string[];\r\n      location: string[];\r\n      employmentType: string[];\r\n    }>\r\n  >;\r\n}) {\r\n  const filterCategories: { name: string; key: keyof Filter }[] = [\r\n    { name: \"Company Name\", key: \"company\" },\r\n    { name: \"Location\", key: \"location\" },\r\n    { name: \"Employment Type\", key: \"employmentType\" },\r\n  ];\r\n\r\n  const handleFilterChange = (\r\n    categoryKey: string,\r\n    selectedValues: string[]\r\n  ) => {\r\n    setSelectedFilters((prev) => ({ ...prev, [categoryKey]: selectedValues }));\r\n  };\r\n  const handleFilterData = (key: keyof Filter) => {\r\n    const rawData = filter[key];\r\n\r\n    if (!Array.isArray(rawData)) return [];\r\n\r\n    const uniqueValues = Array.from(\r\n      new Set(\r\n        rawData.map((item) =>\r\n          typeof item === \"object\" && \"name\" in item ? item.name : item\r\n        )\r\n      )\r\n    );\r\n\r\n    return uniqueValues;\r\n  };\r\n  return (\r\n    <div className=\"flex flex-wrap mx-auto justify-around align-middle my-10 p-3 bg-white border-1 border-slate-200 w-3/4\">\r\n      {filterCategories.map((category) => (\r\n        <div key={category.key} className=\"flex flex-col mb-2\">\r\n          <h2 className=\"text-lg font-semibold font-sans text-slate-600 mb-2\">\r\n            {category.name}\r\n          </h2>\r\n          <MultiFilterDropDown\r\n            options={category}\r\n            filterData={handleFilterData(category.key)}\r\n            categoryName={category.name}\r\n            onFilterChange={(values) =>\r\n              handleFilterChange(category.key, values)\r\n            }\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,QAAQ,EAC9B,MAAM,EACN,kBAAkB,EAUnB;IACC,MAAM,mBAA0D;QAC9D;YAAE,MAAM;YAAgB,KAAK;QAAU;QACvC;YAAE,MAAM;YAAY,KAAK;QAAW;QACpC;YAAE,MAAM;YAAmB,KAAK;QAAiB;KAClD;IAED,MAAM,qBAAqB,CACzB,aACA;QAEA,mBAAmB,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,YAAY,EAAE;YAAe,CAAC;IAC1E;IACA,MAAM,mBAAmB,CAAC;QACxB,MAAM,UAAU,MAAM,CAAC,IAAI;QAE3B,IAAI,CAAC,MAAM,OAAO,CAAC,UAAU,OAAO,EAAE;QAEtC,MAAM,eAAe,MAAM,IAAI,CAC7B,IAAI,IACF,QAAQ,GAAG,CAAC,CAAC,OACX,OAAO,SAAS,YAAY,UAAU,OAAO,KAAK,IAAI,GAAG;QAK/D,OAAO;IACT;IACA,qBACE,8OAAC;QAAI,WAAU;kBACZ,iBAAiB,GAAG,CAAC,CAAC,yBACrB,8OAAC;gBAAuB,WAAU;;kCAChC,8OAAC;wBAAG,WAAU;kCACX,SAAS,IAAI;;;;;;kCAEhB,8OAAC,iJAAA,CAAA,UAAmB;wBAClB,SAAS;wBACT,YAAY,iBAAiB,SAAS,GAAG;wBACzC,cAAc,SAAS,IAAI;wBAC3B,gBAAgB,CAAC,SACf,mBAAmB,SAAS,GAAG,EAAE;;;;;;;eAT7B,SAAS,GAAG;;;;;;;;;;AAgB9B","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashwin/Documents/GitHub/choli-app/src/app/jobs/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, JSX } from \"react\";\r\nimport { Job } from \"@/types/jobs\";\r\nimport Image from \"next/image\";\r\nimport Filters from \"@/components/jobs/filters\";\r\nimport { Filter } from \"@/types/filter\";\r\nimport { Company } from \"@/types/company\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function Jobs() {\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    company: [] as string[],\r\n    location: [] as string[],\r\n    employmentType: [] as string[],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const response = await fetch(\"/api/jobs\");\r\n      const data = await response.json();\r\n      setJobs(data);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Prepare filters\r\n  const filters: Filter = {\r\n    company: Array.from(new Set(jobs.map((job) => job.company))), // Extract unique company objects\r\n    location: Array.from(new Set(jobs.map((job) => job.location))),\r\n    employmentType: Array.from(\r\n      new Set(jobs.map((job) => job.description.employmentType))\r\n    ),\r\n    map: function (\r\n      arg0: (item: Company | string) => JSX.Element\r\n    ): import(\"react\").ReactNode {\r\n      throw new Error(\"Function not implemented.\");\r\n    },\r\n  };\r\n\r\n  // Apply filters\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      (selectedFilters.company.length === 0 ||\r\n        selectedFilters.company.includes(job.company.name)) &&\r\n      (selectedFilters.location.length === 0 ||\r\n        selectedFilters.location.includes(job.location)) &&\r\n      (selectedFilters.employmentType.length === 0 ||\r\n        selectedFilters.employmentType.includes(job.description.employmentType))\r\n  );\r\n  const router = useRouter();\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center justify-center\">\r\n      <Filters filter={filters} setSelectedFilters={setSelectedFilters} />\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 w-full max-w-6xl p-5\">\r\n        {filteredJobs.map((job) => (\r\n          <div\r\n            key={job.id}\r\n            className=\"p-5 rounded-xl shadow-md border border-slate-200 w-full max-w-sm mx-auto\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"truncate w-3/4\">\r\n                <h2 className=\"text-xl font-bold overflow-hidden text-ellipsis whitespace-nowrap\">\r\n                  {job.title}\r\n                </h2>\r\n                <p className=\"text-gray-600 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">\r\n                  {job.company.name}\r\n                </p>\r\n              </div>\r\n              <div className=\"w-1/4 flex justify-end\">\r\n                <Image\r\n                  src={job.company.logo ?? \"/placeholder-logo.png\"}\r\n                  alt={job.company.name}\r\n                  width={50}\r\n                  height={50}\r\n                  className=\"rounded-full object-contain\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">\r\n              {job.location}\r\n            </p>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">\r\n              {job.description.industry}\r\n            </p>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">\r\n              {job.description.employmentType}\r\n            </p>\r\n            <button\r\n              onClick={() => router.push(`/jobs/${job.id}`)}\r\n              className=\"text-xs bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 cursor-pointer mt-2\"\r\n            >\r\n              Apply Now\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAGA;AAPA;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACrD,SAAS,EAAE;QACX,UAAU,EAAE;QACZ,gBAAgB,EAAE;IACpB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ;QACV;QAEA;IACF,GAAG,EAAE;IAEL,kBAAkB;IAClB,MAAM,UAAkB;QACtB,SAAS,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,OAAO;QACzD,UAAU,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,QAAQ;QAC3D,gBAAgB,MAAM,IAAI,CACxB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,WAAW,CAAC,cAAc;QAE1D,KAAK,SACH,IAA6C;YAE7C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,gBAAgB;IAChB,MAAM,eAAe,KAAK,MAAM,CAC9B,CAAC,MACC,CAAC,gBAAgB,OAAO,CAAC,MAAM,KAAK,KAClC,gBAAgB,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KACpD,CAAC,gBAAgB,QAAQ,CAAC,MAAM,KAAK,KACnC,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,KACjD,CAAC,gBAAgB,cAAc,CAAC,MAAM,KAAK,KACzC,gBAAgB,cAAc,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,cAAc,CAAC;IAE7E,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,8IAAA,CAAA,UAAO;gBAAC,QAAQ;gBAAS,oBAAoB;;;;;;0BAE9C,8OAAC;gBAAI,WAAU;0BACZ,aAAa,GAAG,CAAC,CAAC,oBACjB,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DACX,IAAI,KAAK;;;;;;0DAEZ,8OAAC;gDAAE,WAAU;0DACV,IAAI,OAAO,CAAC,IAAI;;;;;;;;;;;;kDAGrB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CACJ,KAAK,IAAI,OAAO,CAAC,IAAI,IAAI;4CACzB,KAAK,IAAI,OAAO,CAAC,IAAI;4CACrB,OAAO;4CACP,QAAQ;4CACR,WAAU;;;;;;;;;;;;;;;;;0CAIhB,8OAAC;gCAAE,WAAU;0CACV,IAAI,QAAQ;;;;;;0CAEf,8OAAC;gCAAE,WAAU;0CACV,IAAI,WAAW,CAAC,QAAQ;;;;;;0CAE3B,8OAAC;gCAAE,WAAU;0CACV,IAAI,WAAW,CAAC,cAAc;;;;;;0CAEjC,8OAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;gCAC5C,WAAU;0CACX;;;;;;;uBAlCI,IAAI,EAAE;;;;;;;;;;;;;;;;AA0CvB","debugId":null}}]
}