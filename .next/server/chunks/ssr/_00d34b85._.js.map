{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\"use server\";\r\n// import { JSX, useState } from \"react\";\r\nimport { promises as fs } from \"fs\";\r\nimport { Job } from \"@/types/jobs\";\r\nimport Image from \"next/image\";\r\nimport Filters from \"@/components/jobs/filters\";\r\nimport { Filter } from \"@/types/filter\";\r\nimport { Company } from \"@/types/company\";\r\n\r\nexport default async function Jobs() {\r\n  const data = await fs.readFile(\r\n    process.cwd() + \"/src/app/data/jobs.json\",\r\n    \"utf-8\"\r\n  );\r\n  const jobs: Job[] = JSON.parse(data);\r\n\r\n  // Filter state\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    company: [] as string[],\r\n    location: [] as string[],\r\n    employmentType: [] as string[],\r\n  });\r\n\r\n  const filters: Filter = {\r\n    location: [],\r\n    company: [] as Company[],\r\n    employmentType: [],\r\n    map: function (\r\n      arg0: (item: Company | string) => JSX.Element\r\n    ): import(\"react\").ReactNode {\r\n      throw new Error(\"Function not implemented.\");\r\n    },\r\n  };\r\n\r\n  if (!jobs || jobs.length === 0) {\r\n    return <div>No jobs found</div>;\r\n  }\r\n\r\n  // Populate filters\r\n  jobs.forEach((job) => {\r\n    filters.company.push(job.company);\r\n    filters.employmentType.push(job.description.employmentType);\r\n    filters.location.push(job.location);\r\n  });\r\n\r\n  // Apply filters\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      (selectedFilters.company.length === 0 ||\r\n        selectedFilters.company.includes(job.company.name)) &&\r\n      (selectedFilters.location.length === 0 ||\r\n        selectedFilters.location.includes(job.location)) &&\r\n      (selectedFilters.employmentType.length === 0 ||\r\n        selectedFilters.employmentType.includes(job.description.employmentType))\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center justify-center\">\r\n      {/* Pass filter state and setter to Filters */}\r\n      <Filters filter={filters} setSelectedFilters={setSelectedFilters} />\r\n\r\n      <div className=\"w-full flex flex-row flex-wrap items-center justify-center\">\r\n        {filteredJobs.map((job: Job) => (\r\n          <div\r\n            key={job.id}\r\n            className=\"p-5 rounded-xl shadow-md border-1 border-slate-200 min-w-1/3 max-w-3/4 m-2\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold\">{job.title}</h2>\r\n                <p>{job.company.name}</p>\r\n              </div>\r\n              <div>\r\n                <Image\r\n                  src={job.company.logo ?? \"/placeholder-logo.png\"}\r\n                  alt={job.company.name}\r\n                  width={50}\r\n                  height={50}\r\n                  className=\"rounded-full\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p>{job.location}</p>\r\n            <p>{job.description.role}</p>\r\n            <p>{job.description.industry}</p>\r\n            <p>{job.description.employmentType}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;kQAU8B,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}