{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli-app/src/components/jobs/filters/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Job } from \"@/types/jobs\";\r\nimport Image from \"next/image\";\r\nimport Filters from \"@/components/jobs/filters\";\r\n\r\nexport default function Jobs() {\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    company: [] as string[],\r\n    location: [] as string[],\r\n    employmentType: [] as string[],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const response = await fetch(\"/api/jobs\");\r\n      const data = await response.json();\r\n      setJobs(data);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Prepare filters\r\n  const filters = {\r\n    company: Array.from(new Set(jobs.map((job) => job.company.name))),\r\n    location: Array.from(new Set(jobs.map((job) => job.location))),\r\n    employmentType: Array.from(new Set(jobs.map((job) => job.description.employmentType))),\r\n  };\r\n\r\n  // Apply filters\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      (selectedFilters.company.length === 0 || selectedFilters.company.includes(job.company.name)) &&\r\n      (selectedFilters.location.length === 0 || selectedFilters.location.includes(job.location)) &&\r\n      (selectedFilters.employmentType.length === 0 || selectedFilters.employmentType.includes(job.description.employmentType))\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center justify-center\">\r\n      <Filters filter={filters} setSelectedFilters={setSelectedFilters} />\r\n\r\n      {/* âœ… Grid Layout for Better Responsiveness */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 w-full max-w-6xl p-5\">\r\n        {filteredJobs.map((job) => (\r\n          <div\r\n            key={job.id}\r\n            className=\"p-5 rounded-xl shadow-md border border-slate-200 w-full max-w-sm mx-auto\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"truncate w-3/4\">\r\n                <h2 className=\"text-xl font-bold overflow-hidden text-ellipsis whitespace-nowrap\">{job.title}</h2>\r\n                <p className=\"text-gray-600 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">{job.company.name}</p>\r\n              </div>\r\n              <div className=\"w-1/4 flex justify-end\">\r\n                <Image\r\n                  src={job.company.logo ?? \"/placeholder-logo.png\"}\r\n                  alt={job.company.name}\r\n                  width={50}\r\n                  height={50}\r\n                  className=\"rounded-full object-contain\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">{job.location}</p>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">{job.description.industry}</p>\r\n            <p className=\"text-gray-500 text-sm overflow-hidden text-ellipsis whitespace-nowrap\">{job.description.employmentType}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACrD,SAAS,EAAE;QACX,UAAU,EAAE;QACZ,gBAAgB,EAAE;IACpB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM;4CAAY;oBAChB,MAAM,WAAW,MAAM,MAAM;oBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,QAAQ;gBACV;;YAEA;QACF;yBAAG,EAAE;IAEL,kBAAkB;IAClB,MAAM,UAAU;QACd,SAAS,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,OAAO,CAAC,IAAI;QAC9D,UAAU,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,QAAQ;QAC3D,gBAAgB,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,WAAW,CAAC,cAAc;IACrF;IAEA,gBAAgB;IAChB,MAAM,eAAe,KAAK,MAAM,CAC9B,CAAC,MACC,CAAC,gBAAgB,OAAO,CAAC,MAAM,KAAK,KAAK,gBAAgB,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAC3F,CAAC,gBAAgB,QAAQ,CAAC,MAAM,KAAK,KAAK,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,KACzF,CAAC,gBAAgB,cAAc,CAAC,MAAM,KAAK,KAAK,gBAAgB,cAAc,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,cAAc,CAAC;IAG3H,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,iJAAA,CAAA,UAAO;gBAAC,QAAQ;gBAAS,oBAAoB;;;;;;0BAG9C,6LAAC;gBAAI,WAAU;0BACZ,aAAa,GAAG,CAAC,CAAC,oBACjB,6LAAC;wBAEC,WAAU;;0CAEV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAAqE,IAAI,KAAK;;;;;;0DAC5F,6LAAC;gDAAE,WAAU;0DAAyE,IAAI,OAAO,CAAC,IAAI;;;;;;;;;;;;kDAExG,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4CACJ,KAAK,IAAI,OAAO,CAAC,IAAI,IAAI;4CACzB,KAAK,IAAI,OAAO,CAAC,IAAI;4CACrB,OAAO;4CACP,QAAQ;4CACR,WAAU;;;;;;;;;;;;;;;;;0CAIhB,6LAAC;gCAAE,WAAU;0CAAyE,IAAI,QAAQ;;;;;;0CAClG,6LAAC;gCAAE,WAAU;0CAAyE,IAAI,WAAW,CAAC,QAAQ;;;;;;0CAC9G,6LAAC;gCAAE,WAAU;0CAAyE,IAAI,WAAW,CAAC,cAAc;;;;;;;uBApB/G,IAAI,EAAE;;;;;;;;;;;;;;;;AA0BvB;GAnEwB;KAAA","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli-app/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect, JSX } from \"react\";\r\nimport { Job } from \"@/types/jobs\";\r\nimport Image from \"next/image\";\r\nimport Filters from \"@/components/jobs/filters\";\r\nimport { Filter } from \"@/types/filter\";\r\nimport { Company } from \"@/types/company\";\r\n\r\nexport default function Jobs() {\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    company: [] as string[],\r\n    location: [] as string[],\r\n    employmentType: [] as string[],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const response = await fetch(\"/api/jobs\");\r\n      const data = await response.json();\r\n      setJobs(data);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Prepare filters\r\n  const filters: Filter = {\r\n    company: Array.from(new Set(jobs.map((job) => job.company))), // Extract unique company objects\r\n    location: Array.from(new Set(jobs.map((job) => job.location))),\r\n    employmentType: Array.from(\r\n      new Set(jobs.map((job) => job.description.employmentType))\r\n    ),\r\n    map: function (\r\n      arg0: (item: Company | string) => JSX.Element\r\n    ): import(\"react\").ReactNode {\r\n      throw new Error(\"Function not implemented.\");\r\n    },\r\n  };\r\n\r\n  // Apply filters\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      (selectedFilters.company.length === 0 ||\r\n        selectedFilters.company.includes(job.company.name)) &&\r\n      (selectedFilters.location.length === 0 ||\r\n        selectedFilters.location.includes(job.location)) &&\r\n      (selectedFilters.employmentType.length === 0 ||\r\n        selectedFilters.employmentType.includes(job.description.employmentType))\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center justify-center\">\r\n      {/* Pass filter state and setter to Filters */}\r\n      <Filters filter={filters} setSelectedFilters={setSelectedFilters} />\r\n\r\n      <div className=\"w-full flex flex-row flex-wrap items-center justify-center mb-5\">\r\n        {filteredJobs.map((job) => (\r\n          <div\r\n            key={job.id}\r\n            className=\"p-5 rounded-xl shadow-md border-1 border-slate-200 min-w-1/3 max-w-3/4 m-2\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"\">\r\n                <h2 className=\"text-xl font-bold truncate\">{job.title}</h2>\r\n                <p className=\"truncate\">{job.company.name}</p>\r\n              </div>\r\n              <div className=\" \">\r\n                <Image\r\n                  src={job.company.logo ?? \"/placeholder-logo.png\"}\r\n                  alt={job.company.name}\r\n                  width={50}\r\n                  height={50}\r\n                  className=\"rounded-full\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"truncate\">{job.location}</p>\r\n            {/* <p>{job.description.role}</p> */}\r\n            <p className=\"truncate\">{job.description.industry}</p>\r\n            <p className=\"truncate\">{job.description.employmentType}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;;;AAJA;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACrD,SAAS,EAAE;QACX,UAAU,EAAE;QACZ,gBAAgB,EAAE;IACpB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM;4CAAY;oBAChB,MAAM,WAAW,MAAM,MAAM;oBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,QAAQ;gBACV;;YAEA;QACF;yBAAG,EAAE;IAEL,kBAAkB;IAClB,MAAM,UAAkB;QACtB,SAAS,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,OAAO;QACzD,UAAU,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,QAAQ;QAC3D,gBAAgB,MAAM,IAAI,CACxB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAI,WAAW,CAAC,cAAc;QAE1D,KAAK,SACH,IAA6C;YAE7C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,gBAAgB;IAChB,MAAM,eAAe,KAAK,MAAM,CAC9B,CAAC,MACC,CAAC,gBAAgB,OAAO,CAAC,MAAM,KAAK,KAClC,gBAAgB,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KACpD,CAAC,gBAAgB,QAAQ,CAAC,MAAM,KAAK,KACnC,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,KACjD,CAAC,gBAAgB,cAAc,CAAC,MAAM,KAAK,KACzC,gBAAgB,cAAc,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,cAAc,CAAC;IAG7E,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,iJAAA,CAAA,UAAO;gBAAC,QAAQ;gBAAS,oBAAoB;;;;;;0BAE9C,6LAAC;gBAAI,WAAU;0BACZ,aAAa,GAAG,CAAC,CAAC,oBACjB,6LAAC;wBAEC,WAAU;;0CAEV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAA8B,IAAI,KAAK;;;;;;0DACrD,6LAAC;gDAAE,WAAU;0DAAY,IAAI,OAAO,CAAC,IAAI;;;;;;;;;;;;kDAE3C,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4CACJ,KAAK,IAAI,OAAO,CAAC,IAAI,IAAI;4CACzB,KAAK,IAAI,OAAO,CAAC,IAAI;4CACrB,OAAO;4CACP,QAAQ;4CACR,WAAU;;;;;;;;;;;;;;;;;0CAIhB,6LAAC;gCAAE,WAAU;0CAAY,IAAI,QAAQ;;;;;;0CAErC,6LAAC;gCAAE,WAAU;0CAAY,IAAI,WAAW,CAAC,QAAQ;;;;;;0CACjD,6LAAC;gCAAE,WAAU;0CAAY,IAAI,WAAW,CAAC,cAAc;;;;;;;uBArBlD,IAAI,EAAE;;;;;;;;;;;;;;;;AA2BvB;GA9EwB;KAAA","debugId":null}}]
}