{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli/src/components/jobs/filters/dropdown.tsx"],"sourcesContent":["\"use client\";\r\nimport { Company } from \"@/types/company\";\r\nimport { Options } from \"@/types/filter\";\r\nimport React, { useState } from \"react\";\r\nimport { ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\nexport default function MultiFilterDropDown({\r\n  options,\r\n  filterData,\r\n  categoryName,\r\n}: {\r\n  categoryName: string;\r\n  options: Options;\r\n  filterData: Company[] | string[];\r\n}) {\r\n  const { isObject, option } = options;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setIsOpen((prev) => !prev);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto relative\">\r\n      {/* Toggle Button */}\r\n      <button\r\n        onClick={toggleDropdown}\r\n        className=\"w-full flex items-center justify-between bg-gray-100 px-4 py-2 rounded-md shadow-sm text-left text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none\"\r\n      >\r\n        <span>{categoryName}</span>\r\n        {isOpen ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n      </button>\r\n\r\n      {/* Dropdown Menu */}\r\n      {isOpen && (\r\n        <div className=\"mt-2 p-4 bg-white border rounded-md shadow-md max-h-64 overflow-y-auto space-y-2 absolute z-10 w-full\">\r\n          {filterData?.map((item, index) => {\r\n            let optionLabel = \"\";\r\n            let optionValue = \"\";\r\n\r\n            if (isObject) {\r\n              optionLabel = (item as Record<string, any>)[\r\n                option?.label ?? \"name\"\r\n              ];\r\n              optionValue = (item as Record<string, any>)[\r\n                option?.value ?? \"id\"\r\n              ];\r\n            } else {\r\n              optionLabel = item as string;\r\n              optionValue = item as string;\r\n            }\r\n\r\n            // Use both `optionValue` and `index` for a unique key\r\n            const uniqueKey = `${optionValue}-${index}`;\r\n\r\n            return (\r\n              <label\r\n                key={uniqueKey} // Ensure unique key\r\n                className=\"flex items-center gap-2 cursor-pointer text-sm\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={optionValue}\r\n                  className=\"form-checkbox h-4 w-4 text-blue-600\"\r\n                />\r\n                <span className=\"truncate\">{optionLabel}</span>\r\n              </label>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;;;AAJA;;;AAMe,SAAS,oBAAoB,EAC1C,OAAO,EACP,UAAU,EACV,YAAY,EAKb;;IACC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;IAC7B,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,iBAAiB,IAAM,UAAU,CAAC,OAAS,CAAC;IAElD,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBACC,SAAS;gBACT,WAAU;;kCAEV,6LAAC;kCAAM;;;;;;oBACN,uBAAS,6LAAC,mNAAA,CAAA,YAAS;wBAAC,MAAM;;;;;6CAAS,6LAAC,uNAAA,CAAA,cAAW;wBAAC,MAAM;;;;;;;;;;;;YAIxD,wBACC,6LAAC;gBAAI,WAAU;0BACZ,YAAY,IAAI,CAAC,MAAM;oBACtB,IAAI,cAAc;oBAClB,IAAI,cAAc;oBAElB,IAAI,UAAU;wBACZ,cAAc,AAAC,IAA4B,CACzC,QAAQ,SAAS,OAClB;wBACD,cAAc,AAAC,IAA4B,CACzC,QAAQ,SAAS,KAClB;oBACH,OAAO;wBACL,cAAc;wBACd,cAAc;oBAChB;oBAEA,sDAAsD;oBACtD,MAAM,YAAY,GAAG,YAAY,CAAC,EAAE,OAAO;oBAE3C,qBACE,6LAAC;wBAEC,WAAU;;0CAEV,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,WAAU;;;;;;0CAEZ,6LAAC;gCAAK,WAAU;0CAAY;;;;;;;uBARvB;;;;;gBAWX;;;;;;;;;;;;AAKV;GAjEwB;KAAA","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli/src/components/jobs/filters/index.tsx"],"sourcesContent":["import { Filter, Options } from \"@/types/filter\";\r\nimport MultiFilterDropDown from \"./dropdown\";\r\nimport { Company } from \"@/types/company\";\r\n\r\nexport default function Filters({ filter }: { filter: Filter }) {\r\n  const filterCategories: Options[] = [\r\n    {\r\n      name: \"Company Name\",\r\n      key: \"company\",\r\n      isObject: true,\r\n      option: {\r\n        label: \"name\",\r\n        value: \"id\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Location Details\",\r\n      key: \"location\",\r\n    },\r\n    {\r\n      name: \"Employment Type\",\r\n      key: \"employmentType\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap mx-auto justify-around align-middle my-10 p-3 bg-white border-1 border-slate-200 w-3/4\">\r\n      {filterCategories.map((category) => {\r\n        // Ensuring type safety with proper dynamic key access\r\n        const rawData = filter[category.key as keyof Filter];\r\n\r\n        // Type checking the rawData based on the category\r\n        const data =\r\n          Array.isArray(rawData) &&\r\n          rawData.every(\r\n            (item) =>\r\n              typeof item === \"string\" ||\r\n              (typeof item === \"object\" && item !== null && \"id\" in item)\r\n          )\r\n            ? (rawData as string[] | Company[])\r\n            : [];\r\n\r\n        return (\r\n          <div key={category.key} className=\"flex flex-col mb-2\">\r\n            <h2 className=\"text-lg font-semibold font-sans text-slate-600 mb-2\">\r\n              {category.name}\r\n            </h2>\r\n            <div className=\"flex flex-col\">\r\n              <MultiFilterDropDown\r\n                options={category}\r\n                filterData={data}\r\n                categoryName={category.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;;AAGe,SAAS,QAAQ,EAAE,MAAM,EAAsB;IAC5D,MAAM,mBAA8B;QAClC;YACE,MAAM;YACN,KAAK;YACL,UAAU;YACV,QAAQ;gBACN,OAAO;gBACP,OAAO;YACT;QACF;QACA;YACE,MAAM;YACN,KAAK;QACP;QACA;YACE,MAAM;YACN,KAAK;QACP;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,iBAAiB,GAAG,CAAC,CAAC;YACrB,sDAAsD;YACtD,MAAM,UAAU,MAAM,CAAC,SAAS,GAAG,CAAiB;YAEpD,kDAAkD;YAClD,MAAM,OACJ,MAAM,OAAO,CAAC,YACd,QAAQ,KAAK,CACX,CAAC,OACC,OAAO,SAAS,YACf,OAAO,SAAS,YAAY,SAAS,QAAQ,QAAQ,QAErD,UACD,EAAE;YAER,qBACE,6LAAC;gBAAuB,WAAU;;kCAChC,6LAAC;wBAAG,WAAU;kCACX,SAAS,IAAI;;;;;;kCAEhB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,oJAAA,CAAA,UAAmB;4BAClB,SAAS;4BACT,YAAY;4BACZ,cAAc,SAAS,IAAI;;;;;;;;;;;;eARvB,SAAS,GAAG;;;;;QAa1B;;;;;;AAGN;KAvDwB","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ashanmu2/Desktop/Projects/job%20portal/choli/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Job } from \"@/types/jobs\";\r\nimport Image from \"next/image\";\r\nimport Filters from \"@/components/jobs/filters\";\r\nimport { Filter } from \"@/types/filter\";\r\nimport { Company } from \"@/types/company\";\r\nimport jobsData from \"@/app/data/jobs.json\"; // Import statically for client-side\r\nimport { JSX } from \"react\";\r\n\r\nexport default function Jobs() {\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    company: [] as string[],\r\n    location: [] as string[],\r\n    employmentType: [] as string[],\r\n  });\r\n\r\n  const [filters, setFilters] = useState<Filter>({\r\n    company: [],\r\n    location: [],\r\n    employmentType: [],\r\n    map: function (arg0: (item: Company | string) => JSX.Element): import(\"react\").ReactNode {\r\n      throw new Error(\"Function not implemented.\");\r\n    }\r\n  });\r\n\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n\r\n  useEffect(() => {\r\n    const filters: Filter = {\r\n      location: [],\r\n      company: [],\r\n      employmentType: [],\r\n      map: function (arg0: (item: Company | string) => JSX.Element): import(\"react\").ReactNode {\r\n        throw new Error(\"Function not implemented.\");\r\n      }\r\n    };\r\n\r\n    const uniqueLocations = new Set<string>();\r\n    const uniqueCompanies = new Map<string, Company>();\r\n    const uniqueTypes = new Set<string>();\r\n\r\n    jobsData.forEach((job: Job) => {\r\n      uniqueLocations.add(job.location);\r\n      uniqueCompanies.set(job.company.id, job.company);\r\n      uniqueTypes.add(job.description.employmentType);\r\n    });\r\n\r\n    filters.location = Array.from(uniqueLocations);\r\n    filters.company = Array.from(uniqueCompanies.values());\r\n    filters.employmentType = Array.from(uniqueTypes);\r\n\r\n    setFilters(filters);\r\n    setJobs(jobsData);\r\n  }, []);\r\n\r\n  const handleFilterChange = (category: string, values: string[]) => {\r\n    setSelectedFilters((prev) => ({\r\n      ...prev,\r\n      [category]: values,\r\n    }));\r\n  };\r\n\r\n  const filteredJobs = jobs.filter((job) => {\r\n    const matchCompany =\r\n      selectedFilters.company.length === 0 ||\r\n      selectedFilters.company.includes(job.company.id);\r\n\r\n    const matchLocation =\r\n      selectedFilters.location.length === 0 ||\r\n      selectedFilters.location.includes(job.location);\r\n\r\n    const matchType =\r\n      selectedFilters.employmentType.length === 0 ||\r\n      selectedFilters.employmentType.includes(job.description.employmentType);\r\n\r\n    return matchCompany && matchLocation && matchType;\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center justify-center\">\r\n      <Filters filter={filters} onFilterChange={handleFilterChange} />\r\n      <div className=\"w-full flex flex-row flex-wrap items-center justify-center\">\r\n        {filteredJobs.map((job: Job) => (\r\n          <div\r\n            key={job.id}\r\n            className=\"p-5 rounded-xl shadow-md border-1 border-slate-200 min-w-1/3 max-w-3/4 m-2\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold\">{job.title}</h2>\r\n                <p>{job.company.name}</p>\r\n              </div>\r\n              <div>\r\n                <Image\r\n                  src={job.company.logo ?? \"/placeholder-logo.png\"}\r\n                  alt={job.company.name}\r\n                  width={50}\r\n                  height={50}\r\n                  className=\"rounded-full\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <p>{job.location}</p>\r\n            <p>{job.description.role}</p>\r\n            <p>{job.description.industry}</p>\r\n            <p>{job.description.employmentType}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}