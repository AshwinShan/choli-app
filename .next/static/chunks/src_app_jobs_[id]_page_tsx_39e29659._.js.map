{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashwin/Documents/GitHub/choli-app/src/app/jobs/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function JobDetail() {\r\n  const params = useParams(); // ✅ Use `useParams()` instead of directly accessing `params.id`\r\n  const router = useRouter();\r\n  type Job = {\r\n    id: string;\r\n    title: string;\r\n    location: string;\r\n    company: {\r\n      name: string;\r\n      logo: string;\r\n    };\r\n    description: {\r\n      description: string;\r\n      responsibilities: string[];\r\n      requirements: string[];\r\n      benefits: string[];\r\n    };\r\n  };\r\n  const [job, setJob] = useState<Job | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchJob = async () => {\r\n      const response = await fetch(`/api/jobs`);\r\n      const jobs = await response.json();\r\n      const selectedJob = jobs.find((j: any) => j.id === params.id); // ✅ Unwrap params correctly\r\n\r\n      if (selectedJob) {\r\n        setJob(selectedJob);\r\n      } else {\r\n        router.push(\"/jobs\"); // Redirect if job not found\r\n      }\r\n    };\r\n\r\n    fetchJob();\r\n  }, [params.id, router]);\r\n\r\n  if (!job)\r\n    return <p className=\"text-center mt-10 text-gray-600\">Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto mt-10 p-6 bg-white shadow-md rounded-md\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">{job.title}</h1>\r\n          <p className=\"text-gray-600\">{job.company.name}</p>\r\n        </div>\r\n        <Image\r\n          src={job.company.logo}\r\n          alt={job.company.name}\r\n          width={80}\r\n          height={80}\r\n          className=\"rounded-full object-contain\"\r\n        />\r\n      </div>\r\n\r\n      <p className=\"text-gray-500 mt-4\">{job.location}</p>\r\n      <p className=\"mt-2\">{job.description.description}</p>\r\n\r\n      <h2 className=\"text-lg font-semibold mt-4\">Responsibilities</h2>\r\n      <ul className=\"list-disc pl-5 text-gray-600\">\r\n        {job.description.responsibilities.map((resp: string, idx: number) => (\r\n          <li key={idx}>{resp}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2 className=\"text-lg font-semibold mt-4\">Requirements</h2>\r\n      <ul className=\"list-disc pl-5 text-gray-600\">\r\n        {job.description.requirements.map((req: string, idx: number) => (\r\n          <li key={idx}>{req}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2 className=\"text-lg font-semibold mt-4\">Benefits</h2>\r\n      <ul className=\"list-disc pl-5 text-gray-600\">\r\n        {job.description.benefits.map((benefit: string, idx: number) => (\r\n          <li key={idx}>{benefit}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button\r\n        onClick={() => {\r\n          alert(\"Application submitted successfully!\");\r\n          setTimeout(() => {\r\n            window.location.href = \"/jobs\";\r\n          }, 1000);\r\n        }}\r\n        className=\"block w-full mt-6 bg-blue-500 text-white px-4 py-3 rounded-md hover:bg-blue-600 text-center cursor-pointer transition duration-200 ease-in-out\"\r\n      >\r\n        Apply Now\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,gEAAgE;IAC5F,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAgBvB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;gDAAW;oBACf,MAAM,WAAW,MAAM,MAAM,CAAC,SAAS,CAAC;oBACxC,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,MAAM,cAAc,KAAK,IAAI;oEAAC,CAAC,IAAW,EAAE,EAAE,KAAK,OAAO,EAAE;oEAAG,4BAA4B;oBAE3F,IAAI,aAAa;wBACf,OAAO;oBACT,OAAO;wBACL,OAAO,IAAI,CAAC,UAAU,4BAA4B;oBACpD;gBACF;;YAEA;QACF;8BAAG;QAAC,OAAO,EAAE;QAAE;KAAO;IAEtB,IAAI,CAAC,KACH,qBAAO,6LAAC;QAAE,WAAU;kBAAkC;;;;;;IAExD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAsB,IAAI,KAAK;;;;;;0CAC7C,6LAAC;gCAAE,WAAU;0CAAiB,IAAI,OAAO,CAAC,IAAI;;;;;;;;;;;;kCAEhD,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK,IAAI,OAAO,CAAC,IAAI;wBACrB,KAAK,IAAI,OAAO,CAAC,IAAI;wBACrB,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;;0BAId,6LAAC;gBAAE,WAAU;0BAAsB,IAAI,QAAQ;;;;;;0BAC/C,6LAAC;gBAAE,WAAU;0BAAQ,IAAI,WAAW,CAAC,WAAW;;;;;;0BAEhD,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,6LAAC;gBAAG,WAAU;0BACX,IAAI,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAc,oBACnD,6LAAC;kCAAc;uBAAN;;;;;;;;;;0BAIb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,6LAAC;gBAAG,WAAU;0BACX,IAAI,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAa,oBAC9C,6LAAC;kCAAc;uBAAN;;;;;;;;;;0BAIb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,6LAAC;gBAAG,WAAU;0BACX,IAAI,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAiB,oBAC9C,6LAAC;kCAAc;uBAAN;;;;;;;;;;0BAIb,6LAAC;gBACC,SAAS;oBACP,MAAM;oBACN,WAAW;wBACT,OAAO,QAAQ,CAAC,IAAI,GAAG;oBACzB,GAAG;gBACL;gBACA,WAAU;0BACX;;;;;;;;;;;;AAKP;GA5FwB;;QACP,qIAAA,CAAA,YAAS;QACT,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}